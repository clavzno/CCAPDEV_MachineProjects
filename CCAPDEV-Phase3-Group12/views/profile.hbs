<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../css/common.css">
    <link rel="stylesheet" href="../css/profile.css">
    <!-- <script src="../../controllers/profileController.js" defer></script> -->
    <title>Bookface</title>
</head>

<body>
    {{>editProfileDialog}}

    <!-- header -->
    {{>header}}

    <div class="content">
        {{>sidebar_left}}

        <div class="mainContent">
            <!-- user profile display -->
            <div class="profile">
                <div class="profile_header">
                    <img src="{{user.user_header}}" class="profile_images" alt="userProfileCover" />
                </div>
                <div class="profile_picture">
                    <img src="{{user.user_img}}" class="profile_images" alt="userProfilePicture" />
                </div>
                <div class="profile_info">
                    <h1 id="userprofile_name" class="ruda-bold">{{user.displayName}}</h1>
                    <p id="userprofile_username" class="orienta-regular-lighter">@{{user.username}}</p>
                    <p id="userprofile_description" class="work-sans-light">
                        {{user.bio}}
                    </p>
                    <div class="profile_actions">
                        <button class="point importantButton" id="toggleEditProfileInfo">Edit
                            Profile</button>
                    </div>
                </div>
            </div>

            <!-- selector -->
            <div class="selector ruda-regular point" id="viewSelector">
                <div class="selector_selected" id="viewPostsButton">Posts</div>
                <div style="margin: auto" id="viewRepliesButton">Replies</div>
            </div> <!-- end selector -->


            <div class="profile_posts">
                <!-- load posts using partial for single posts here -->
                {{#if user.posts}}
                {{#each user.posts}}
                {{>post}}
                {{/each}}
                {{else}}
                <p style="color: white;" class="work-sans-regular">end of feed</p>
                {{/if}}
            </div>

        </div> <!-- end main content -->

        {{>sidebar_right}}

        {{!-- {{>logoutButton}} --}}
        {{! Yep ^^ does not work, but having the one at the bottom does instead :) }}
        <div class="logoutButton">
            <a href="/logout">
                <img class="" src="../../sprites/icons/Dark/icons8-login-rounded-96-darkmode.png" alt="logout" />
            </a>
        </div>

    </div> <!-- end content -->

    <script>
        //adding event listeners to all
        document.addEventListener('DOMContentLoaded', function () {
            //adds event listener to the save changes button in edit profile
            document.getElementById("editProfileInfo").addEventListener("submit", function () {
                event.preventDefault(); // prevent the default form submission behavior
                console.log("id editProfileInfo event listener added.");
                closePopup();
            });

            //adds event listener to the edit profile button in main profile page
            document.getElementById("toggleEditProfileInfo").addEventListener("click", function () {
                console.log("id toggleEditProfileInfo event listener added.");
                openPopup();
            });

            //adds event listener to the other p within view selector
            document.getElementById("viewRepliesButton").addEventListener("click", function () {
                console.log("id viewRepliesButton event listener added.");
                viewReplies();
            });

            //adds event listener to the p within the view selector
            document.getElementById("viewPostsButton").addEventListener("click", function () {
                console.log("id viewPostsButton event listener added.");
                viewPosts();
            });
        });

        /******** EDIT PROFILE BUTTON *********/

        function closePopup() {
            console.log("function closePopup() called.");
            document.getElementById("editProfile").style.display = "none";
            getFormData(event);
        }

        function openPopup() {
            console.log("function openPopup() called.");
            document.getElementById("editProfile").style.display = "flex";
            //DO NOT CHANGE THIS TO BLOCK it will break the flex stuff i set up
        }

        /******** SELECTOR BUTTON *********/

        const viewSelector = document.getElementById("viewSelector");

        const viewPostsButton = document.getElementById("viewPostsButton");
        const viewRepliesButton = document.getElementById("viewRepliesButton");

        //anything with selector_selected should have no margin
        //anything without selector_selected should have margin: auto;

        function viewPosts() {
            console.log("function viewPosts called.");
            //switch selector_selected class to go to POSTS and remove class from REPLIES
            document.getElementById("viewRepliesButton").classList.remove("selector_selected");
            document.getElementById("viewPostsButton").classList.add("selector_selected");

            if (viewPostsButton.classList.contains("selector_selected")) {
                // viewPostsButton has selector_selected class, so remove its margin
                viewPostsButton.style.margin = "0";
            } else {
                // viewPostsButton doesn't have selector_selected class, so apply margin: auto
                viewPostsButton.style.margin = "auto";
            }

            if (viewRepliesButton.classList.contains("selector_selected")) {
                // viewRepliesButton has selector_selected class, so remove its margin
                viewRepliesButton.style.margin = "0";
            } else {
                // viewRepliesButton doesn't have selector_selected class, so apply margin: auto
                viewRepliesButton.style.margin = "auto";
            }
        }

        function viewReplies() {
            console.log("function viewReplies called.");
            //switch selector_selected class to go to REPLIES and remove class from POSTS
            document.getElementById("viewPostsButton").classList.remove("selector_selected");
            document.getElementById("viewRepliesButton").classList.add("selector_selected");

            if (viewPostsButton.classList.contains("selector_selected")) {
                // viewPostsButton has selector_selected class, so remove its margin
                viewPostsButton.style.margin = "0";
            } else {
                // viewPostsButton doesn't have selector_selected class, so apply margin: auto
                viewPostsButton.style.margin = "auto";
            }

            if (viewRepliesButton.classList.contains("selector_selected")) {
                // viewRepliesButton has selector_selected class, so remove its margin
                viewRepliesButton.style.margin = "0";
            } else {
                // viewRepliesButton doesn't have selector_selected class, so apply margin: auto
                viewRepliesButton.style.margin = "auto";
            }
        }

        function getFormData(event) {
            event.preventDefault();
            const form = document.getElementById('editProfileInfo');
            const formData = new FormData(form);
            const username = formData.get('user_name');
            const displayName = formData.get('displayName');
            const bio = formData.get('bio');

            console.log(username, displayName, bio);

            // send data
            fetch('/updateProfile', { // Replace with your actual route
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    // Handle server response (success or error)
                    console.log(data);
                    // Update UI or redirect based on response
                })
                .catch(error => {
                    console.error(error);
                    // Handle errors during submission
                });
        }
    </script>
</body>

</html>